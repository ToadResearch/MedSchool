openapi: 3.0.1
info:
  title: HAPI FHIR Server
  contact: {}
  version: 8.2.0
servers:
- url: http://localhost:8080/fhir
  description: HAPI FHIR Server
components:
  schemas:
    FHIR-JSON-RESOURCE:
      type: object
      description: A FHIR resource
    FHIR-XML-RESOURCE:
      type: object
      description: A FHIR resource
tags:
- name: Encounter
  description: 'The Encounter FHIR resource type<br/>Base profile: http://hl7.org/fhir/StructureDefinition/Encounter'
paths:
  /Encounter/{id}:
    get:
      tags:
      - Encounter
      summary: 'read-instance: Read Encounter instance'
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
    put:
      tags:
      - Encounter
      summary: 'update-instance: Update an existing Encounter instance, or create
        using a client-assigned ID'
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      requestBody:
        content:
          application/fhir+json:
            schema:
              $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            example: |-
              {
                "resourceType": "Encounter"
              }
          application/fhir+xml:
            schema:
              $ref: '#/components/schemas/FHIR-XML-RESOURCE'
            example: <Encounter xmlns="http://hl7.org/fhir"/>
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
    delete:
      tags:
      - Encounter
      summary: 'instance-delete: Perform a logical delete on a resource instance'
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
    patch:
      tags:
      - Encounter
      summary: 'instance-patch: Patch a resource instance of type Encounter by ID'
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      requestBody:
        content:
          application/fhir+json:
            schema:
              $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            example: |-
              {
                "resourceType": "Parameters",
                "parameter": [ {
                  "name": "operation",
                  "part": [ {
                    "name": "type",
                    "valueString": "add"
                  }, {
                    "name": "path",
                    "valueString": "Patient"
                  }, {
                    "name": "name",
                    "valueString": "birthDate"
                  }, {
                    "name": "value",
                    "valueDate": "1930-01-01"
                  } ]
                } ]
              }
          application/fhir+xml:
            schema:
              $ref: '#/components/schemas/FHIR-XML-RESOURCE'
            example: |-
              <Parameters xmlns="http://hl7.org/fhir">
                 <parameter>
                    <name value="operation"/>
                    <part>
                       <name value="type"/>
                       <valueString value="add"/>
                    </part>
                    <part>
                       <name value="path"/>
                       <valueString value="Patient"/>
                    </part>
                    <part>
                       <name value="name"/>
                       <valueString value="birthDate"/>
                    </part>
                    <part>
                       <name value="value"/>
                       <valueDate value="1930-01-01"/>
                    </part>
                 </parameter>
              </Parameters>
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter/{id}/_history/{version_id}:
    get:
      tags:
      - Encounter
      summary: 'vread-instance: Read Encounter instance with specific version'
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      - name: version_id
        in: path
        description: The resource version ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '1'
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter:
    get:
      tags:
      - Encounter
      summary: 'search-type: Search for Encounter instances'
      description: This is a search type
      parameters:
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html):\
          \ Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html):\
          \ Time period plan covers\r\n* [CareTeam](careteam.html): Time period team\
          \ covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment\
          \ was documented\r\n* [Composition](composition.html): Composition editing\
          \ time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\
          \n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time\
          \ of the report\r\n* [Encounter](encounter.html): A date within the period\
          \ the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided\
          \ date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html):\
          \ When history was recorded or last updated\r\n* [Flag](flag.html): Time\
          \ period when flag is active\r\n* [Immunization](immunization.html): Vaccination\
          \  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\
          \n* [Observation](observation.html): Obtained date/time. If the obtained\
          \ element is a period, a date that falls in the period\r\n* [Procedure](procedure.html):\
          \ When the procedure was performed\r\n* [RiskAssessment](riskassessment.html):\
          \ When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When\
          \ the request was made"
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: string
            format: date
      - name: _language
        in: query
        description: The language of the resource
        required: false
        schema:
          type: string
      - name: participant-type
        in: query
        description: Role of participant in encounter
        required: false
        schema:
          type: string
      - name: subject
        in: query
        description: The patient or group present at the encounter
        required: false
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: string
            format: date
      - name: appointment
        in: query
        description: The appointment that scheduled this encounter
        required: false
        schema:
          type: string
      - name: part-of
        in: query
        description: Another Encounter this encounter is part of
        required: false
        schema:
          type: string
      - name: type
        in: query
        description: "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html):\
          \ allergy | intolerance - Underlying mechanism (if known)\r\n* [Composition](composition.html):\
          \ Kind of composition (LOINC if possible)\r\n* [DocumentManifest](documentmanifest.html):\
          \ Kind of document set\r\n* [DocumentReference](documentreference.html):\
          \ Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html):\
          \ Specific type of encounter\r\n* [EpisodeOfCare](episodeofcare.html): Type/class\
          \  - e.g. specialist referral, disease management"
        required: false
        schema:
          type: string
      - name: participant
        in: query
        description: Persons involved in the encounter other than the patient
        required: false
        schema:
          type: string
      - name: reason-code
        in: query
        description: Coded reason the encounter takes place
        required: false
        schema:
          type: string
      - name: _list
        in: query
        description: Search the contents of the resource's data using a list
        required: false
        schema:
          type: string
      - name: based-on
        in: query
        description: The ServiceRequest that initiated this encounter
        required: false
        schema:
          type: string
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html):\
          \ Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care\
          \ plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n*\
          \ [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\
          \n* [Composition](composition.html): Who and/or what the composition is\
          \ about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html):\
          \ Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated\
          \ patient\r\n* [DeviceRequest](devicerequest.html): Individual the service\
          \ is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search\
          \ by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html):\
          \ The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html):\
          \ The subject of the set of documents\r\n* [DocumentReference](documentreference.html):\
          \ Who/what is the subject of the document\r\n* [Encounter](encounter.html):\
          \ The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html):\
          \ The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html):\
          \ The identity of a subject to list family member history items for\r\n\
          * [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html):\
          \ Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html):\
          \ Who the study is about\r\n* [Immunization](immunization.html): The patient\
          \ for the vaccination record\r\n* [List](list.html): If all resources have\
          \ the same subject\r\n* [MedicationAdministration](medicationadministration.html):\
          \ The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html):\
          \ The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html):\
          \ Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html):\
          \ Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html):\
          \ The identity of the person who requires the diet, formula or nutritional\
          \ supplement\r\n* [Observation](observation.html): The subject that the\
          \ observation is about (if patient)\r\n* [Procedure](procedure.html): Search\
          \ by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what\
          \ does assessment apply to?\r\n* [ServiceRequest](servicerequest.html):\
          \ Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html):\
          \ Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html):\
          \ The identity of a patient to list dispenses for"
        required: false
        schema:
          type: string
      - name: location-period
        in: query
        description: Time period during which the patient was present at the location
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: string
            format: date
      - name: special-arrangement
        in: query
        description: Wheelchair, translator, stretcher, etc.
        required: false
        schema:
          type: string
      - name: class
        in: query
        description: Classification of patient encounter
        required: false
        schema:
          type: string
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html):\
          \ External ids for this item\r\n* [CarePlan](careplan.html): External Ids\
          \ for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\
          \n* [Composition](composition.html): Version-independent identifier for\
          \ the Composition\r\n* [Condition](condition.html): A unique identifier\
          \ of the condition record\r\n* [Consent](consent.html): Identifier for this\
          \ record (external references)\r\n* [DetectedIssue](detectedissue.html):\
          \ Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html):\
          \ Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html):\
          \ An identifier for the report\r\n* [DocumentManifest](documentmanifest.html):\
          \ Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html):\
          \ Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s)\
          \ by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html):\
          \ Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html):\
          \ A search by a record identifier\r\n* [Goal](goal.html): External Ids for\
          \ this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the\
          \ Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html):\
          \ Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html):\
          \ Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html):\
          \ Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html):\
          \ Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html):\
          \ Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html):\
          \ Return nutrition orders with this external identifier\r\n* [Observation](observation.html):\
          \ The unique id for a particular observation\r\n* [Procedure](procedure.html):\
          \ A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html):\
          \ Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html):\
          \ Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html):\
          \ External identifier\r\n* [SupplyRequest](supplyrequest.html): Business\
          \ Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html):\
          \ Return prescriptions with this external identifier"
        required: false
        schema:
          type: string
      - name: practitioner
        in: query
        description: Persons involved in the encounter other than the patient
        required: false
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        required: false
        schema:
          type: string
      - name: episode-of-care
        in: query
        description: Episode(s) of care that this encounter should be recorded against
        required: false
        schema:
          type: string
      - name: length
        in: query
        description: Length of encounter in days
        required: false
        schema:
          anyOf:
          - type: string
          - type: number
      - name: diagnosis
        in: query
        description: The diagnosis or procedure relevant to the encounter
        required: false
        schema:
          type: string
      - name: _filter
        in: query
        description: Search the contents of the resource's data using a filter
        required: false
        schema:
          type: string
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        required: false
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        required: false
        schema:
          type: string
      - name: _has
        in: query
        description: Return resources linked to by the given target
        required: false
        schema:
          type: string
      - name: reason-reference
        in: query
        description: Reason the encounter takes place (reference)
        required: false
        schema:
          type: string
      - name: _source
        in: query
        description: Identifies where the resource comes from
        required: false
        schema:
          type: string
      - name: location
        in: query
        description: Location the encounter takes place
        required: false
        schema:
          type: string
      - name: service-provider
        in: query
        description: The organization (facility) responsible for this encounter
        required: false
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        required: false
        schema:
          type: string
      - name: _text
        in: query
        description: Search on the narrative of the resource
        required: false
        schema:
          type: string
      - name: _content
        in: query
        description: Search on the entire content of the resource
        required: false
        schema:
          type: string
      - name: account
        in: query
        description: The set of accounts that may be used for billing for this Encounter
        required: false
        schema:
          type: string
      - name: status
        in: query
        description: planned | arrived | triaged | in-progress | onleave | finished
          | cancelled +
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
    post:
      tags:
      - Encounter
      summary: 'create-type: Create a new Encounter instance'
      requestBody:
        content:
          application/fhir+json:
            schema:
              $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            example: |-
              {
                "resourceType": "Encounter"
              }
          application/fhir+xml:
            schema:
              $ref: '#/components/schemas/FHIR-XML-RESOURCE'
            example: <Encounter xmlns="http://hl7.org/fhir"/>
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter/_history:
    get:
      tags:
      - Encounter
      summary: 'type-history: Fetch the resource change history for all resources
        of type Encounter'
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter/{id}/_history:
    get:
      tags:
      - Encounter
      summary: 'instance-history: Fetch the resource change history for all resources
        of type Encounter'
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter/_search:
    get:
      tags:
      - Encounter
      summary: 'search-type: Search for Encounter instances'
      description: This is a search type
      parameters:
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html):\
          \ Date first version of the resource instance was recorded\r\n* [CarePlan](careplan.html):\
          \ Time period plan covers\r\n* [CareTeam](careteam.html): Time period team\
          \ covers\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment\
          \ was documented\r\n* [Composition](composition.html): Composition editing\
          \ time\r\n* [Consent](consent.html): When this Consent was created or indexed\r\
          \n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time\
          \ of the report\r\n* [Encounter](encounter.html): A date within the period\
          \ the Encounter lasted\r\n* [EpisodeOfCare](episodeofcare.html): The provided\
          \ date search value falls within the episode of care's period\r\n* [FamilyMemberHistory](familymemberhistory.html):\
          \ When history was recorded or last updated\r\n* [Flag](flag.html): Time\
          \ period when flag is active\r\n* [Immunization](immunization.html): Vaccination\
          \  (non)-Administration Date\r\n* [List](list.html): When the list was prepared\r\
          \n* [Observation](observation.html): Obtained date/time. If the obtained\
          \ element is a period, a date that falls in the period\r\n* [Procedure](procedure.html):\
          \ When the procedure was performed\r\n* [RiskAssessment](riskassessment.html):\
          \ When was assessment made?\r\n* [SupplyRequest](supplyrequest.html): When\
          \ the request was made"
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: string
            format: date
      - name: _language
        in: query
        description: The language of the resource
        required: false
        schema:
          type: string
      - name: participant-type
        in: query
        description: Role of participant in encounter
        required: false
        schema:
          type: string
      - name: subject
        in: query
        description: The patient or group present at the encounter
        required: false
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: string
            format: date
      - name: appointment
        in: query
        description: The appointment that scheduled this encounter
        required: false
        schema:
          type: string
      - name: part-of
        in: query
        description: Another Encounter this encounter is part of
        required: false
        schema:
          type: string
      - name: type
        in: query
        description: "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html):\
          \ allergy | intolerance - Underlying mechanism (if known)\r\n* [Composition](composition.html):\
          \ Kind of composition (LOINC if possible)\r\n* [DocumentManifest](documentmanifest.html):\
          \ Kind of document set\r\n* [DocumentReference](documentreference.html):\
          \ Kind of document (LOINC if possible)\r\n* [Encounter](encounter.html):\
          \ Specific type of encounter\r\n* [EpisodeOfCare](episodeofcare.html): Type/class\
          \  - e.g. specialist referral, disease management"
        required: false
        schema:
          type: string
      - name: participant
        in: query
        description: Persons involved in the encounter other than the patient
        required: false
        schema:
          type: string
      - name: reason-code
        in: query
        description: Coded reason the encounter takes place
        required: false
        schema:
          type: string
      - name: _list
        in: query
        description: Search the contents of the resource's data using a list
        required: false
        schema:
          type: string
      - name: based-on
        in: query
        description: The ServiceRequest that initiated this encounter
        required: false
        schema:
          type: string
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html):\
          \ Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care\
          \ plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n*\
          \ [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\
          \n* [Composition](composition.html): Who and/or what the composition is\
          \ about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html):\
          \ Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated\
          \ patient\r\n* [DeviceRequest](devicerequest.html): Individual the service\
          \ is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search\
          \ by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html):\
          \ The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html):\
          \ The subject of the set of documents\r\n* [DocumentReference](documentreference.html):\
          \ Who/what is the subject of the document\r\n* [Encounter](encounter.html):\
          \ The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html):\
          \ The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html):\
          \ The identity of a subject to list family member history items for\r\n\
          * [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html):\
          \ Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html):\
          \ Who the study is about\r\n* [Immunization](immunization.html): The patient\
          \ for the vaccination record\r\n* [List](list.html): If all resources have\
          \ the same subject\r\n* [MedicationAdministration](medicationadministration.html):\
          \ The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html):\
          \ The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html):\
          \ Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html):\
          \ Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html):\
          \ The identity of the person who requires the diet, formula or nutritional\
          \ supplement\r\n* [Observation](observation.html): The subject that the\
          \ observation is about (if patient)\r\n* [Procedure](procedure.html): Search\
          \ by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what\
          \ does assessment apply to?\r\n* [ServiceRequest](servicerequest.html):\
          \ Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html):\
          \ Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html):\
          \ The identity of a patient to list dispenses for"
        required: false
        schema:
          type: string
      - name: location-period
        in: query
        description: Time period during which the patient was present at the location
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: string
            format: date
      - name: special-arrangement
        in: query
        description: Wheelchair, translator, stretcher, etc.
        required: false
        schema:
          type: string
      - name: class
        in: query
        description: Classification of patient encounter
        required: false
        schema:
          type: string
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html):\
          \ External ids for this item\r\n* [CarePlan](careplan.html): External Ids\
          \ for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\
          \n* [Composition](composition.html): Version-independent identifier for\
          \ the Composition\r\n* [Condition](condition.html): A unique identifier\
          \ of the condition record\r\n* [Consent](consent.html): Identifier for this\
          \ record (external references)\r\n* [DetectedIssue](detectedissue.html):\
          \ Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html):\
          \ Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html):\
          \ An identifier for the report\r\n* [DocumentManifest](documentmanifest.html):\
          \ Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html):\
          \ Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s)\
          \ by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html):\
          \ Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html):\
          \ A search by a record identifier\r\n* [Goal](goal.html): External Ids for\
          \ this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the\
          \ Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html):\
          \ Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html):\
          \ Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html):\
          \ Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html):\
          \ Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html):\
          \ Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html):\
          \ Return nutrition orders with this external identifier\r\n* [Observation](observation.html):\
          \ The unique id for a particular observation\r\n* [Procedure](procedure.html):\
          \ A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html):\
          \ Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html):\
          \ Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html):\
          \ External identifier\r\n* [SupplyRequest](supplyrequest.html): Business\
          \ Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html):\
          \ Return prescriptions with this external identifier"
        required: false
        schema:
          type: string
      - name: practitioner
        in: query
        description: Persons involved in the encounter other than the patient
        required: false
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        required: false
        schema:
          type: string
      - name: episode-of-care
        in: query
        description: Episode(s) of care that this encounter should be recorded against
        required: false
        schema:
          type: string
      - name: length
        in: query
        description: Length of encounter in days
        required: false
        schema:
          anyOf:
          - type: string
          - type: number
      - name: diagnosis
        in: query
        description: The diagnosis or procedure relevant to the encounter
        required: false
        schema:
          type: string
      - name: _filter
        in: query
        description: Search the contents of the resource's data using a filter
        required: false
        schema:
          type: string
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        required: false
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        required: false
        schema:
          type: string
      - name: _has
        in: query
        description: Return resources linked to by the given target
        required: false
        schema:
          type: string
      - name: reason-reference
        in: query
        description: Reason the encounter takes place (reference)
        required: false
        schema:
          type: string
      - name: _source
        in: query
        description: Identifies where the resource comes from
        required: false
        schema:
          type: string
      - name: location
        in: query
        description: Location the encounter takes place
        required: false
        schema:
          type: string
      - name: service-provider
        in: query
        description: The organization (facility) responsible for this encounter
        required: false
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        required: false
        schema:
          type: string
      - name: _text
        in: query
        description: Search on the narrative of the resource
        required: false
        schema:
          type: string
      - name: _content
        in: query
        description: Search on the entire content of the resource
        required: false
        schema:
          type: string
      - name: account
        in: query
        description: The set of accounts that may be used for billing for this Encounter
        required: false
        schema:
          type: string
      - name: status
        in: query
        description: planned | arrived | triaged | in-progress | onleave | finished
          | cancelled +
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter/$validate:
    get:
      tags:
      - Encounter
      summary: 'GET: /Encounter/$validate'
      parameters:
      - name: mode
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
    post:
      tags:
      - Encounter
      summary: 'POST: /Encounter/$validate'
      requestBody:
        content:
          application/fhir+json:
            schema:
              title: FHIR Resource
              type: object
            example: |-
              {
                "resourceType": "Parameters",
                "parameter": [ {
                  "name": "resource",
                  "resource": {
                    "resourceType": "Encounter",
                    "id": "1"
                  }
                }, {
                  "name": "mode",
                  "valueCode": "example"
                }, {
                  "name": "profile"
                } ]
              }
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter/{id}/$validate:
    get:
      tags:
      - Encounter
      summary: 'GET: /Encounter/{id}/$validate'
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      - name: mode
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
    post:
      tags:
      - Encounter
      summary: 'POST: /Encounter/{id}/$validate'
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      requestBody:
        content:
          application/fhir+json:
            schema:
              title: FHIR Resource
              type: object
            example: |-
              {
                "resourceType": "Parameters",
                "parameter": [ {
                  "name": "resource",
                  "resource": {
                    "resourceType": "Encounter",
                    "id": "1"
                  }
                }, {
                  "name": "mode",
                  "valueCode": "example"
                }, {
                  "name": "profile"
                } ]
              }
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter/{id}/$meta-delete:
    post:
      tags:
      - Encounter
      summary: 'POST: /Encounter/{id}/$meta-delete'
      description: Delete tags, profiles, and/or security labels from a resource
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      requestBody:
        content:
          application/fhir+json:
            schema:
              title: FHIR Resource
              type: object
            example: |-
              {
                "resourceType": "Parameters",
                "parameter": [ {
                  "name": "meta"
                } ]
              }
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter/{id}/$meta-add:
    post:
      tags:
      - Encounter
      summary: 'POST: /Encounter/{id}/$meta-add'
      description: Add tags, profiles, and/or security labels to a resource
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      requestBody:
        content:
          application/fhir+json:
            schema:
              title: FHIR Resource
              type: object
            example: |-
              {
                "resourceType": "Parameters",
                "parameter": [ {
                  "name": "meta"
                } ]
              }
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter/$meta:
    get:
      tags:
      - Encounter
      summary: 'GET: /Encounter/$meta'
      description: Request a list of tags, profiles, and security labels for a specfic
        resource instance
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
    post:
      tags:
      - Encounter
      summary: 'POST: /Encounter/$meta'
      description: Request a list of tags, profiles, and security labels for a specfic
        resource instance
      requestBody:
        content:
          application/fhir+json:
            schema:
              title: FHIR Resource
              type: object
            example: |-
              {
                "resourceType": "Parameters"
              }
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter/{id}/$meta:
    get:
      tags:
      - Encounter
      summary: 'GET: /Encounter/{id}/$meta'
      description: Request a list of tags, profiles, and security labels for a specfic
        resource instance
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
    post:
      tags:
      - Encounter
      summary: 'POST: /Encounter/{id}/$meta'
      description: Request a list of tags, profiles, and security labels for a specfic
        resource instance
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      requestBody:
        content:
          application/fhir+json:
            schema:
              title: FHIR Resource
              type: object
            example: |-
              {
                "resourceType": "Parameters"
              }
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter/$expunge:
    post:
      tags:
      - Encounter
      summary: 'POST: /Encounter/$expunge'
      requestBody:
        content:
          application/fhir+json:
            schema:
              title: FHIR Resource
              type: object
            example: |-
              {
                "resourceType": "Parameters",
                "parameter": [ {
                  "name": "limit",
                  "valueInteger": 0
                }, {
                  "name": "expungeDeletedResources",
                  "valueBoolean": false
                }, {
                  "name": "expungePreviousVersions",
                  "valueBoolean": false
                }, {
                  "name": "expungeEverything",
                  "valueBoolean": false
                } ]
              }
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter/{id}/$expunge:
    post:
      tags:
      - Encounter
      summary: 'POST: /Encounter/{id}/$expunge'
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      requestBody:
        content:
          application/fhir+json:
            schema:
              title: FHIR Resource
              type: object
            example: |-
              {
                "resourceType": "Parameters",
                "parameter": [ {
                  "name": "limit",
                  "valueInteger": 0
                }, {
                  "name": "expungeDeletedResources",
                  "valueBoolean": false
                }, {
                  "name": "expungePreviousVersions",
                  "valueBoolean": false
                }, {
                  "name": "expungeEverything",
                  "valueBoolean": false
                } ]
              }
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter/$everything:
    get:
      tags:
      - Encounter
      summary: 'GET: /Encounter/$everything'
      parameters:
      - name: _count
        in: query
        description: Results from this method are returned across multiple pages.
          This parameter controls the size of those pages.
        required: false
        schema:
          type: string
      - name: _offset
        in: query
        description: Results from this method are returned across multiple pages.
          This parameter controls the offset when fetching a page.
        required: false
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: Only return resources which were last updated as specified by
          the given range
        required: false
        schema:
          type: string
      - name: _content
        in: query
        description: Filter the resources to return only resources matching the given
          _content filter (note that this filter is applied only to results which
          link to the given patient, not to the patient itself or to supporting resources
          linked to by the matched resources)
        required: false
        schema:
          type: string
      - name: _text
        in: query
        description: Filter the resources to return only resources matching the given
          _text filter (note that this filter is applied only to results which link
          to the given patient, not to the patient itself or to supporting resources
          linked to by the matched resources)
        required: false
        schema:
          type: string
      - name: _filter
        in: query
        description: Filter the resources to return only resources matching the given
          _filter filter (note that this filter is applied only to results which link
          to the given patient, not to the patient itself or to supporting resources
          linked to by the matched resources)
        required: false
        schema:
          type: string
      - name: _type
        in: query
        description: Filter the resources to return only resources matching the given
          _type filter (note that this filter is applied only to results which link
          to the given patient, not to the patient itself or to supporting resources
          linked to by the matched resources)
        required: false
        schema:
          type: string
      - name: _id
        in: query
        description: Filter the resources to return based on the patient ids provided.
        required: false
        schema:
          type: string
      - name: _mdm
        in: query
        description: Filter the resources to return only resources matching the given
          _type filter (note that this filter is applied only to results which link
          to the given patient, not to the patient itself or to supporting resources
          linked to by the matched resources)
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
    post:
      tags:
      - Encounter
      summary: 'POST: /Encounter/$everything'
      requestBody:
        content:
          application/fhir+json:
            schema:
              title: FHIR Resource
              type: object
            example: |-
              {
                "resourceType": "Parameters",
                "parameter": [ {
                  "name": "_count"
                }, {
                  "name": "_offset"
                }, {
                  "name": "_lastUpdated"
                }, {
                  "name": "_content",
                  "valueString": "example"
                }, {
                  "name": "_text",
                  "valueString": "example"
                }, {
                  "name": "_filter",
                  "valueString": "example"
                }, {
                  "name": "_type",
                  "valueString": "example"
                }, {
                  "name": "_id"
                }, {
                  "name": "_mdm",
                  "valueBoolean": false
                } ]
              }
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter/{id}/$everything:
    get:
      tags:
      - Encounter
      summary: 'GET: /Encounter/{id}/$everything'
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      - name: _count
        in: query
        description: Results from this method are returned across multiple pages.
          This parameter controls the size of those pages.
        required: false
        schema:
          type: string
      - name: _offset
        in: query
        description: Results from this method are returned across multiple pages.
          This parameter controls the offset when fetching a page.
        required: false
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: Only return resources which were last updated as specified by
          the given range
        required: false
        schema:
          type: string
      - name: _content
        in: query
        description: Filter the resources to return only resources matching the given
          _content filter (note that this filter is applied only to results which
          link to the given patient, not to the patient itself or to supporting resources
          linked to by the matched resources)
        required: false
        schema:
          type: string
      - name: _text
        in: query
        description: Filter the resources to return only resources matching the given
          _text filter (note that this filter is applied only to results which link
          to the given patient, not to the patient itself or to supporting resources
          linked to by the matched resources)
        required: false
        schema:
          type: string
      - name: _filter
        in: query
        description: Filter the resources to return only resources matching the given
          _filter filter (note that this filter is applied only to results which link
          to the given patient, not to the patient itself or to supporting resources
          linked to by the matched resources)
        required: false
        schema:
          type: string
      - name: _type
        in: query
        description: Filter the resources to return only resources matching the given
          _type filter (note that this filter is applied only to results which link
          to the given patient, not to the patient itself or to supporting resources
          linked to by the matched resources)
        required: false
        schema:
          type: string
      - name: _id
        in: query
        description: Filter the resources to return based on the patient ids provided.
        required: false
        schema:
          type: string
      - name: _mdm
        in: query
        description: Filter the resources to return only resources matching the given
          _type filter (note that this filter is applied only to results which link
          to the given patient, not to the patient itself or to supporting resources
          linked to by the matched resources)
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
    post:
      tags:
      - Encounter
      summary: 'POST: /Encounter/{id}/$everything'
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      requestBody:
        content:
          application/fhir+json:
            schema:
              title: FHIR Resource
              type: object
            example: |-
              {
                "resourceType": "Parameters",
                "parameter": [ {
                  "name": "_count"
                }, {
                  "name": "_offset"
                }, {
                  "name": "_lastUpdated"
                }, {
                  "name": "_content",
                  "valueString": "example"
                }, {
                  "name": "_text",
                  "valueString": "example"
                }, {
                  "name": "_filter",
                  "valueString": "example"
                }, {
                  "name": "_type",
                  "valueString": "example"
                }, {
                  "name": "_id"
                }, {
                  "name": "_mdm",
                  "valueBoolean": false
                } ]
              }
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
  /Encounter/{id}/$diff:
    get:
      tags:
      - Encounter
      summary: Comparte two resources or two versions of a single resource
      description: This operation examines two resource versions (can be two versions
        of the same resource, or two different resources) and generates a FHIR Patch
        document showing the differences.
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      - name: from
        in: query
        description: The resource ID and version to diff from
        required: true
        schema:
          type: string
        example: Patient/example/version/1
      - name: to
        in: query
        description: The resource ID and version to diff to
        required: true
        schema:
          type: string
        example: Patient/example/version/2
      - name: includeMeta
        in: query
        description: Should differences in the Resource.meta element be included in
          the diff
        required: false
        schema:
          type: string
        example: 'false'
      - name: fromVersion
        in: query
        description: The resource ID and version to diff from
        required: false
        schema:
          type: string
        example: Patient/example/version/1
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
    post:
      tags:
      - Encounter
      summary: Comparte two resources or two versions of a single resource
      description: This operation examines two resource versions (can be two versions
        of the same resource, or two different resources) and generates a FHIR Patch
        document showing the differences.
      parameters:
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: '123'
      requestBody:
        content:
          application/fhir+json:
            schema:
              title: FHIR Resource
              type: object
            example: |-
              {
                "resourceType": "Parameters",
                "parameter": [ {
                  "name": "from"
                }, {
                  "name": "to"
                }, {
                  "name": "includeMeta",
                  "valueBoolean": false
                }, {
                  "name": "fromVersion",
                  "valueString": "example"
                } ]
              }
      responses:
        '200':
          description: Success
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            application/fhir+xml:
              schema:
                $ref: '#/components/schemas/FHIR-XML-RESOURCE'
